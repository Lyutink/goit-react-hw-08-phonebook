{"version":3,"file":"static/js/44.20f9be26.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/ContactsView.js","views/HomeView.js","views/LoginView.js","views/RegisterView.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst TitleForm = styled.h1`\n  padding-bottom: 24px;\n  padding-left: 12px;\n  font-size: 1.5rem;\n  font-weight: 700;\n`;\n\nconst ContainerForm = styled.div`\n  margin-left: 12px;\n  max-width: 320px;\n  padding: 8px;\n  border: solid;\n`;\n\nconst LabelForm = styled.label`\n  display: block;\n  margin-top: 12px;\n\n  font-size: 1.2rem;\n  font-weight: 500;\n`;\n\nconst BtnForm = styled.button`\n  display: block;\n  margin-top: 12px;\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n\nexport { TitleForm, ContainerForm, LabelForm, BtnForm };\n","//import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { ContainerForm, LabelForm, BtnForm } from \"./ContactForm.styled\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`\n    )\n    .required(\"Please enter your name, it is required\"),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      \"Phone number must be digits (at least 5 symbols long), it can contain spaces, dashes, parentheses and can start with +\"\n    )\n    .required(\"Please enter your phone number, it is required\"),\n});\n///////////////////////////////////\nexport default function ContactForm({ onSubmit, adding }) {\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{ name: \"\", phone: \"\" }}\n      validationSchema={validationSchema}\n      onSubmit={(values,{ resetForm}) => {\n        onSubmit(values);\n        resetForm(); \n      }}\n    >\n      <Form autoComplete=\"off\" >\n        <ContainerForm>\n          <LabelForm htmlFor=\"name\">Name</LabelForm>\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n\n          <LabelForm htmlFor=\"phone\">Phone</LabelForm>\n          <Field type=\"tel\" name=\"phone\" />\n          <ErrorMessage name=\"phone\" />\n\n          <BtnForm type=\"submit\">\n            {adding ? \"Adding...\" : \"Add contact\"}\n          </BtnForm>\n        </ContainerForm>\n      </Form>\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const TitleContacts = styled.h2`\n  padding-left: 12px;\n  font-size: 1.5rem;\n  font-weight: 500;\n`;\n\nexport const ContactItem = styled.li`\n  margin-top: 4px;\n  font-size: 1.2rem;\n  font-weight: 400;\n`;\n\nexport const ContactName = styled.span`\n  margin-right: 10px;\n  font-size: 30px;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 10px;\n  font-size: 30px;\n  font-weight: 500;\n`;\n\nexport const BtnDelete = styled.button`\n  margin-left: 8px;\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n\n\n","import PropTypes from \"prop-types\";\nimport { useDeleteContactMutation } from \"redux/contactsSlice\";\nimport { ContactItem, ContactName, ContactNumber, BtnDelete } from \"./Contact.styled\";\n\nexport default function Contact({ name, phone, idContact }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <ContactItem>\n      <p>\n        <ContactName>{name}:</ContactName>\n        <ContactNumber>{phone}</ContactNumber>\n      </p>\n  \n      <BtnDelete type=\"button\" onClick={() => deleteContact(idContact)}>\n        {isDeleting ? \"Deleting\" : \"Delete\"}\n      </BtnDelete>\n    </ContactItem>\n  );\n}\n\nContact.propTypes = {\n  idContact: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport Contact from \"../Contact/Contact\";\n\nexport default function ContactList({ getContactList}) {\n  return (\n    <ul>\n      {getContactList.map(({ id, name, phone }) => (\n        <Contact\n          name={name}\n          phone={phone}\n          idContact={id}\n          key={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContact.propTypes = {\n  getContactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }).isRequired\n  )\n};\n","import styled from \"styled-components\";\n\nconst LabelFilter = styled.label`\n  display: block;\n  margin-left: 12px;\n  font-size: 1.2rem;\n  font-weight: 500;\n`;\n\nconst InputFilter = styled.input`\n  margin-top: 8px;\n  margin-left: 12px;\n`;\n\nexport { LabelFilter, InputFilter };\n","import PropTypes from \"prop-types\";\n\nimport { LabelFilter, InputFilter } from \"./Filter.styled\";\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <>\n      <LabelFilter>Find contacts by Name</LabelFilter>\n      <InputFilter type=\"text\" value={filter} onChange={onChange} />\n    </>\n  );\n}\n\nFilter.prototype = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contactsSlice';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { TitleForm } from 'components/ContactForm/ContactForm.styled';\nimport { TitleContacts } from 'components/Contact/Contact.styled';\n\nexport const ContactsView = () => {\n  const { data: contacts, isFetching, isError } = useFetchContactsQuery();\n  const [addContact, { isLoading: isAdding }] = useCreateContactMutation();\n  const [filter, setFilter] = useState('');\n\n  const checkContact = name => {\n    const normilizedName = name.toLowerCase();\n    const nameChecked = contact =>\n      normilizedName === contact.name.toLowerCase();\n\n    return !nameChecked;\n  };\n\n  const formSubmitHandler = ({ name, phone }) => {\n    if (checkContact(name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      addContact({ name, phone });\n    }\n  };\n\n  const getContactList = () => {\n    const normilizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normilizedFilter)\n    );\n  };\n\n  const changeFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <>\n      <TitleForm>Phonebook</TitleForm>\n      <ContactForm onSubmit={formSubmitHandler} adding={isAdding} />\n\n      <TitleContacts>Contacts</TitleContacts>\n      <Filter value={filter} onChange={changeFilter} />\n      <>\n        {isError && <h2> Something went wrong </h2>}\n        {isFetching && <h2> Loading contacts...</h2>}\n        {contacts && <ContactList getContactList={getContactList()} />}\n      </>\n    </>\n  );\n};\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nexport const HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Приветственная страница нашего сервиса{' '}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\n// import React from 'react';\n// import { LinkContainer } from 'react-router-bootstrap';\n// import Container from 'react-bootstrap/Container';\n// import Col from 'react-bootstrap/Col';\n// // import {\n// //   PagesContainer,\n// //   HomePageContainer,\n// //   HomePageBtn,\n// //   ColStyled,\n// // } from '../components/styles/StyledComponentsStyles';\n// import {\n//   ViewContainer,\n//   HomeViewContainer,\n//   HomePageBtn,\n//   ColStyled,\n// } from '../components/styles/ComponentsStyles';\n\n// export const HomeView = () => {\n//   return (\n//     <ViewContainer>\n//       <Container>\n//         <HomeViewContainer>\n//           <Col>\n//             <h2>About us</h2>\n//             <p>\n//               This is the App for you to save, seach, and filter contacts of\n//               your friends! Register and stay in touch with all friend whenever\n//               you want!\n//             </p>\n//           </Col>\n//           <ColStyled>\n//             <LinkContainer to=\"/login\">\n//               <HomePageBtn variant=\"outline-primary\" size=\"lg\">\n//                 Sign in\n//               </HomePageBtn>\n//             </LinkContainer>\n//             <LinkContainer to=\"/register\">\n//               <HomePageBtn variant=\"outline-info\" size=\"lg\">\n//                 Sign up\n//               </HomePageBtn>\n//             </LinkContainer>\n//           </ColStyled>\n//         </HomeViewContainer>\n//       </Container>\n//     </ViewContainer>\n//   );\n// };\n","import { useState } from 'react';\n//import { ViewContainer } from '../components/styles/ComponentsStyles';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nexport const LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleInputChange = event => {\n    switch (event.target.name) {\n      case 'email':\n        setEmail(event.target.value);\n        break;\n\n      case 'password':\n        setPassword(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    reset();\n  };\n\n  return (\n    <div>\n      <Form\n        onSubmit={handleSubmit}\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          width: 300,\n        }}\n        autoComplete=\"off\"\n      >\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"name@example.com\"\n            name=\"email\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\" style={{ marginTop: 20 }}>\n          Log in\n        </Button>\n      </Form>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport const RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n};\n"],"names":["TitleForm","styled","ContainerForm","LabelForm","BtnForm","validationSchema","Yup","name","matches","required","number","ContactForm","onSubmit","adding","enableReinitialize","initialValues","phone","values","resetForm","autoComplete","htmlFor","type","TitleContacts","ContactItem","ContactName","ContactNumber","BtnDelete","Contact","idContact","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","ContactList","getContactList","map","id","propTypes","PropTypes","isRequired","LabelFilter","InputFilter","Filter","filter","onChange","value","prototype","ContactsView","useFetchContactsQuery","contacts","data","isFetching","isError","useCreateContactMutation","addContact","isAdding","useState","setFilter","normilizedName","toLowerCase","contact","checkContact","alert","event","target","normilizedFilter","toLocaleLowerCase","includes","styles","container","minHeight","display","alignItems","justifyContent","title","fontWeight","fontSize","textAlign","HomeView","style","role","LoginView","dispatch","useDispatch","email","setEmail","password","setPassword","handleInputChange","preventDefault","authOperations","flexDirection","width","className","placeholder","variant","marginTop","form","label","marginBottom","RegisterView","setName","handleChange","e"],"sourceRoot":""}